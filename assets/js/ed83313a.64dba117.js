"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[564],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=i,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(g,o(o({ref:t},c),{},{components:r})):n.createElement(g,o({ref:t},c))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},410:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={sidebar_position:10,title:"Perspective Origin"},o="Perspective Origin",l={unversionedId:"guide/perspectiveOrigin",id:"guide/perspectiveOrigin",title:"Perspective Origin",description:"Utilities for setting perspective origin css property.",source:"@site/docs/guide/perspectiveOrigin.md",sourceDirName:"guide",slug:"/guide/perspectiveOrigin",permalink:"/tailwind-3dtransform-plugin/guide/perspectiveOrigin",draft:!1,editUrl:"https://github.com/XPD-Kasun/tailwind-3dtransform-plugin/docs/guide/perspectiveOrigin.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Perspective Origin"},sidebar:"tutorialSidebar",previous:{title:"Transform Style",permalink:"/tailwind-3dtransform-plugin/guide/transformStyle"},next:{title:"FAQ",permalink:"/tailwind-3dtransform-plugin/category/faq"}},s={},p=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Customizing Your Theme",id:"customizing-your-theme",level:2},{value:"Arbitrary Values",id:"arbitrary-values",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"perspective-origin"},"Perspective Origin"),(0,i.kt)("p",null,"Utilities for setting perspective origin css property."),(0,i.kt)("div",{className:"table-container"},(0,i.kt)("table",{className:"stripped-table",style:{width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"Class"),(0,i.kt)("td",null,"Properties"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"transform-box-content"),(0,i.kt)("td",null,"transform-box: content-box;")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"transform-box-border"),(0,i.kt)("td",null,"transform-box: border-box;")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"transform-box-fill"),(0,i.kt)("td",null,"transform-box: fill-box;")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"transform-box-stroke"),(0,i.kt)("td",null,"transform-box: stroke-box;")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"transform-box-view"),(0,i.kt)("td",null,"transform-box: view-box;"))))),(0,i.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,i.kt)("p",null,"Use perspective-origin classes set the perspective origin property which is used to determine the position at which the viewer is looking. ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/perspective-origin"},"See more on perspective origin from MDN reference"),". This is used along with ",(0,i.kt)("a",{parentName:"p",href:"/guide/perspective"},"perspective")," class."),(0,i.kt)("p",null,"For instance you can use,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div class="perspective-800 perspective-origin-top-left">\n       \x3c!--Some elementes--\x3e\n</div>\n')),(0,i.kt)("h2",{id:"customizing-your-theme"},"Customizing Your Theme"),(0,i.kt)("p",null,"This takes the same values as ",(0,i.kt)("inlineCode",{parentName:"p"},"transformOrigin"),". We can add new ",(0,i.kt)("inlineCode",{parentName:"p"},"perspective-origin")," classes by extend the default theme by giving additional values for ",(0,i.kt)("inlineCode",{parentName:"p"},"transformOrigin")," key."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=tailwind.config.js",title:"tailwind.config.js"},"module.exports = {\n  theme: {\n    extend: {\n      transformOrigin: {\n        '1/2': '50%',\n      }\n    }\n  }\n}\n")),(0,i.kt)("h2",{id:"arbitrary-values"},"Arbitrary Values"),(0,i.kt)("p",null,"Use usual bracket syntax to add arbitrary values for perspective origin. If you have two values, then join them with ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," char. For example,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'       <div class="perspective-origin-[40%_50%]">\n              \x3c!-- html content --\x3e\n       </div>\n')),(0,i.kt)("p",null,"Learn more about arbitrary value support in the tailwindcss ",(0,i.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values"},"arbitrary values")," documentation."))}d.isMDXComponent=!0}}]);