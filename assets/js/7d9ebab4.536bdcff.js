"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[462],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),d=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=d(a),p=n,f=u["".concat(o,".").concat(p)]||u[p]||c[p]||l;return a?r.createElement(f,s(s({ref:t},m),{},{components:a})):r.createElement(f,s({ref:t},m))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:n,s[1]=i;for(var d=2;d<l;d++)s[d]=a[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8073:(e,t,a)=>{a.d(t,{Z:()=>n});var r=a(7294);const n=function(e){let{children:t,className:a}=e;return r.createElement("div",{className:a},t)}},382:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>m});var r=a(7462),n=(a(7294),a(3905)),l=a(8073);const s={sidebar_position:5,title:"Translate"},i="Translate",o={unversionedId:"guide/translate",id:"guide/translate",title:"Translate",description:"Utilities for translating an element on all three axis.",source:"@site/docs/guide/translate.md",sourceDirName:"guide",slug:"/guide/translate",permalink:"/tailwind-3dtransform-plugin/guide/translate",draft:!1,editUrl:"https://github.com/XPD-Kasun/tailwind-3dtransform-plugin/docs/guide/translate.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Translate"},sidebar:"tutorialSidebar",previous:{title:"Scale",permalink:"/tailwind-3dtransform-plugin/guide/scale"},next:{title:"Flip",permalink:"/tailwind-3dtransform-plugin/guide/flip"}},d={},m=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Customizing Your Theme",id:"customizing-your-theme",level:2},{value:"Arbitrary Values",id:"arbitrary-values",level:2},{value:"Read More",id:"read-more",level:2}],u={toc:m},c="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"translate"},"Translate"),(0,n.kt)("p",null,"Utilities for translating an element on all three axis."),(0,n.kt)("div",{className:"table-container"},(0,n.kt)("table",{className:"stripped-table",style:{width:"100%"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,"Class"),(0,n.kt)("td",null,"Properties"))),(0,n.kt)("tbody",null,[0,"px","0.5",1,"1.5",2,"2.5",3,"3.5",4,5,6,7,8,9,10,11,12,14,16,20,24,28,32,36,40,44,48,52,56,60,64,72,80,96,"1/2","1/3","2/3","1/4","2/4","3/4","full"].map(((e,t)=>{const a=["0rem","1px","0.125rem","0.25rem","0.375rem","0.5rem","0.625rem","0.75rem","0.875rem","1rem","1.25rem","1.5rem","1.75rem","2.0rem","2.25rem","2.5rem","2.75rem","3.0rem","3.5rem","4.0rem","5.0rem","6.0rem","7.0rem","8.0rem","9.0rem","10.0rem","11.0rem","12.0rem","13.0rem","14.0rem","15.0rem","16.0rem","18.0rem","20.0rem","24.0rem","50%","33.333%","66.666%","25%","50%","75%","100%"];return["x","y","z"].map(((r,l)=>(0,n.kt)("tr",null,(0,n.kt)("td",null,"translate-",r,"-",e),(0,n.kt)("td",null,"transform: translate",r.toUpperCase(),"(",a[t],");"))))})),(0,n.kt)("tr",null,(0,n.kt)("td",null,"translate-3d-value"),(0,n.kt)("td",null,"transform: translate3d(value, value, value);"))))),(0,n.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,n.kt)("p",null,"You can translate on all axes using different ",(0,n.kt)("inlineCode",{parentName:"p"},"translate")," classes provided. Default translate values are supported. For instance to translate 4rem on x axis and 20px on y axis, you can use,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<div class="transform tranlate-x-20 translate-y-[20px]">\x3c!--Some Content--\x3e</div>\n')),(0,n.kt)("p",null,"This is another example using tailwind defaults,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<div class="perspective-1200">\n       <div class="transform translate-x-1/2 -translate-y-24 translate-z-12">My element</div>\n</div>\n')),(0,n.kt)("admonition",{title:"Remember to add transform class",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Plugin requires you to add ",(0,n.kt)("inlineCode",{parentName:"p"},"transform")," class along with other transform classes to apply the effect.",(0,n.kt)("br",null),"\nFor example, instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"translate-y-20"),", use ",(0,n.kt)("inlineCode",{parentName:"p"},"transform translate-y-20"),".",(0,n.kt)("br",null),"\nRead more on this ",(0,n.kt)("a",{parentName:"p",href:"/faq/whyTransform"},"here"),".")),(0,n.kt)(l.Z,{className:"my-10",mdxType:"CodeBlock"},(0,n.kt)("div",{className:"flex space-x-10"},(0,n.kt)("div",{className:"w-52 h-52 bg-yellow-200 rounded-lg relative"},(0,n.kt)("div",{className:"w-20 h-20 bg-teal-400 rounded-lg"}),(0,n.kt)("div",{className:"absolute bottom-2 text-center w-full"},"No transforms")),(0,n.kt)("div",{className:"w-52 h-52 bg-yellow-200 rounded-lg relative"},(0,n.kt)("div",{className:"w-20 h-20 bg-teal-400 rounded-lg transform translate-x-10 translate-y-16"}),(0,n.kt)("div",{className:"absolute bottom-2 text-center w-full"},"translate-x-10",(0,n.kt)("br",null),"translate-y-16")),(0,n.kt)("div",{className:"perspective-1000"},(0,n.kt)("div",{className:"w-52 h-52 bg-yellow-200 rounded-lg relative transform rotate-x-30"},(0,n.kt)("div",{className:"w-20 h-20 bg-teal-400 rounded-lg transform translate-x-10 translate-y-16 translate-z-10"}),(0,n.kt)("div",{className:"absolute bottom-2 text-center w-full"},"translate-x-10",(0,n.kt)("br",null),"translate-y-16",(0,n.kt)("br",null),"translate-z-10"))))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="Applying different classes for translate"',title:'"Applying',different:!0,classes:!0,for:!0,'translate"':!0},'<div class="flex space-x-10">\n  <div class="w-52 h-52">\n    <div class="w-20 h-20">    \n    </div>\n  </div>\n  <div class="w-52 h-52">\n    <div class="w-20 h-20 transform translate-x-10 translate-y-16">    \n    </div>\n  </div>\n  <div class="w-52 h-52 transform rotate-x-30">\n    <div class="w-20 h-20 transform translate-x-10 translate-y-16 translate-z-10">    \n    </div>\n  </div>\n</div>\n')),(0,n.kt)("h2",{id:"customizing-your-theme"},"Customizing Your Theme"),(0,n.kt)("p",null,"We extend the default theme by adding additional values for ",(0,n.kt)("inlineCode",{parentName:"p"},"translate")," key. You can add any custom values from ",(0,n.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=tailwind.config.js",title:"tailwind.config.js"},"module.exports = {\n  theme: {\n    extend: {\n      translate: {\n        '4.25': '18rem',\n      }\n    }\n  }\n}\n")),(0,n.kt)("h2",{id:"arbitrary-values"},"Arbitrary Values"),(0,n.kt)("p",null,"If you need to use an custom value for translate, you can use the following syntax."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<div class="translate-x-[250px]">\n  \x3c!-- More Items --\x3e\n</div>\n')),(0,n.kt)("p",null,"Learn more about arbitrary value support in the tailwindcss ",(0,n.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values"},"arbitrary values")," documentation."),(0,n.kt)("h2",{id:"read-more"},"Read More"),(0,n.kt)("p",null,"To learn more about css translate transform refer ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d"},"here"),"."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"You can use modifiers such as ",(0,n.kt)("inlineCode",{parentName:"p"},"md:translate-x-60")," to target media queries, hover, active... etc. You can read about modifiers ",(0,n.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/hover-focus-and-other-states"},"here"),".")))}p.isMDXComponent=!0}}]);